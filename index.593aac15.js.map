{"mappings":"YAAO,IAAMA,EAAkB,CAC3B,CACIC,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,GACJC,KAAM,eAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,MACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,MACJC,KAAM,SAEV,CACID,GAAI,KACJC,KAAM,WAEV,CACID,GAAI,MACJC,KAAM,WAEV,CACID,GAAI,IACJC,KAAM,mBAEV,CACID,GAAI,MACJC,KAAM,YAEV,CACID,GAAI,GACJC,KAAM,YAEV,CACID,GAAI,MACJC,KAAM,OAEV,CACID,GAAI,GACJC,KAAM,QCvERC,EAAY,kCACZC,EAAiBC,SAASC,eAAe,mBAKxC,SAASC,EAAmBC,EAAMC,GACrC,OAAOC,MAAO,GAA6DC,OAR9D,gCAQa,mDAAiEA,OAT/E,mCASuE,UAAaA,OAALH,IAC1FI,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAcD,EAAKE,cACzBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZ,IAAMI,EAAYL,EAAKM,QACjBC,EAAqBF,EAAUG,MAAM,EAAGd,GAC9CS,QAAQC,IAAIC,EAAUG,MAAM,EAAEd,IAWtC,SAAoBM,GAChBX,EAAeoB,UAAY,IAE3BT,EAAKU,SAAQ,SAAAC,GACT,IAgBUC,EAhBHC,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,YAAYC,EAA2BJ,EAA3BI,UAAWC,EAAgBL,EAAhBK,aAC/BC,EAAY3B,SAAS4B,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cACxBH,EAAUR,UAAY,cAA0Bb,OAAZR,GAAgCQ,OAApBkB,EAAY,UAE9BlB,OAFsCiB,EAAM,wFAGxCjB,OADJiB,EAAM,mDAEAjB,QAS1BgB,EAViCG,EAW5BH,EAAWS,KAAI,SAACnC,GAE/B,OADcD,EAAgBqC,MAAK,SAACC,G,OAAMA,EAAErC,KAAOA,C,IACtCC,I,IAGCqC,KAAK,MAhBmC,iDACgB5B,OAoBxD,IAAI6B,KApBsCT,GAqB3CU,cArByD,iDAG1ErC,EAAesC,YAAYV,E,IAxBvBW,CAAWrB,E,IAKdsB,OAAM,SAAAC,G,OAAOA,C,IAGlBtC,EArBkB,EACC,ICNnBA,G","sources":["src/partials/genre.js","src/partials/main-page.js","src/index.js"],"sourcesContent":["export const genresNamesById = [\n    {\n        id: 28,\n        name: \"Action\"\n    },\n    {\n        id: 12,\n        name: \"Adventure\"\n    },  \n    {\n        id: 16,\n        name: \"Animation\"\n    },  \n    {\n        id: 35,\n        name: \"Comedy\"\n    },  \n    {\n        id: 80,\n        name: \"Crime\"\n    },  \n    {\n        id: 99,\n        name: \"Documentary\"\n    },  \n    {\n        id: 18,\n        name: \"Drama\"\n    },  \n    {\n        id: 10751,\n        name: \"Family\"\n    },  \n    {\n        id: 14,\n        name: \"Fantasy\"\n    },  \n    {\n        id: 36,\n        name: \"History\"\n    },  \n    {\n        id: 27,\n        name: \"Horor\"\n    },  \n    {\n        id: 10402,\n        name: \"Music\"\n    },  \n    {\n        id: 9648,\n        name: \"Mystery\"\n    },  \n    {\n        id: 10749,\n        name: \"Romance\"\n    },  \n    {\n        id: 878,\n        name: \"Science Fiction\"\n    },\n    {\n        id: 10770,\n        name: \"TV Movie\"\n    },\n    {\n        id: 53,\n        name: \"Thriller\"\n    },\n    {\n        id: 10752,\n        name: \"War\"\n    },\n    {\n        id: 37,\n        name: \"War\"\n    },\n]\n","import { genresNamesById } from \"./genre\";\n\nconst api_key = \"9ce408291b177c2a2e598968d33c0b4a\";\nconst base_url = \"https://api.themoviedb.org/3/\";\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\nconst movieContainer = document.getElementById('movie-container');\n\nlet currentPage = 1;\nlet itemsPerPage = 18;\n\nexport function fetchPopularMovies(page, itemsPerPage){\n    return fetch (`${base_url}discover/movie?sort_by=popularity.desc&api_key=${api_key}&page=${page}`)\n    .then(response => response.json())\n    .then(data => { \n        const totalMovies = data.total_results;\n        console.log(data);\n        console.log(totalMovies);\n        const movieList = data.results;\n        const slicedMoviePerPage = movieList.slice(0, itemsPerPage);\n        console.log(movieList.slice(0,itemsPerPage));\n        showMovies(slicedMoviePerPage)\n    \n            }\n        )\n\n    .catch(err => err); \n}\n\nfetchPopularMovies(currentPage, itemsPerPage);\n\nfunction showMovies(data){\n    movieContainer.innerHTML = ' ';\n\n    data.forEach(movie => {\n        const {title, poster_path,genre_ids, release_date} = movie;\n        const movieCard = document.createElement('div');\n        movieCard.classList.add('movie-card');\n        movieCard.innerHTML = `<img src =\"${IMAGE_URL}${poster_path} alt=\"${title}\"/>\n            <div class=\"movie-card-text\">\n            <h2 class=\"movie-title\">${title}</h2>\n            <p class=\"movie-card-genre\">${getGenre(genre_ids)} \n            <span class=\"movie-release\">| ${getMovieReleaseDate(release_date)}</span>\n            </p>\n            </div>`\n    movieContainer.appendChild(movieCard);\n    })\n\n}\n\n\nfunction getGenre(movieGenre){\n    const genreNames = movieGenre.map((id) => {\n        const genre = genresNamesById.find((g) => g.id === id);\n        return genre.name;\n    })\n\n    return genreNames.join(',');\n}\n\nfunction getMovieReleaseDate(year){\n    const dateString = year;\n    const movieDate = new Date(dateString);\n    return movieDate.getFullYear();\n}\n\nexport { fetchPopularMovies };","import { fetchPopularMovies } from './partials/main-page';\n\nfetchPopularMovies();\n"],"names":["$dafa4900f3b6e4ee$export$8fb3d1a8ee781306","id","name","$3862d110e4797799$var$IMAGE_URL","$3862d110e4797799$var$movieContainer","document","getElementById","$3862d110e4797799$export$225b489b0d997c20","page","itemsPerPage1","fetch","concat","then","response","json","data","totalMovies","total_results","console","log","movieList","results","slicedMoviePerPage","slice","innerHTML","forEach","movie","movieGenre","title","poster_path","genre_ids","release_date","movieCard","createElement","classList","add","map","find","g","join","Date","getFullYear","appendChild","$3862d110e4797799$var$showMovies","catch","err"],"version":3,"file":"index.593aac15.js.map"}