{"mappings":"YAAO,IAAMA,EAAkB,CAC3B,CACIC,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,GACJC,KAAM,eAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,MACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,MACJC,KAAM,SAEV,CACID,GAAI,KACJC,KAAM,WAEV,CACID,GAAI,MACJC,KAAM,WAEV,CACID,GAAI,IACJC,KAAM,mBAEV,CACID,GAAI,MACJC,KAAM,YAEV,CACID,GAAI,GACJC,KAAM,YAEV,CACID,GAAI,MACJC,KAAM,OAEV,CACID,GAAI,GACJC,KAAM,QC3EP,SAASC,IACd,IAAMC,EAAgBC,SAASC,eAAe,UAC1CF,IACFA,EAAcG,MAAMC,QAAU,e,CAI3B,SAASC,IACd,IAAML,EAAgBC,SAASC,eAAe,UAC1CF,IACFA,EAAcG,MAAMC,QAAU,O,CCPlC,IAEME,EAAY,kCACZC,EAAiBN,SAASC,eAAe,mBAKxC,SAASM,EAAmBC,EAAMC,GAEvC,OADAX,IACOY,MACL,GAA6DC,OAVhD,gCAUD,mDAAiEA,OAXjE,mCAWyD,UAAaA,OAALH,IAE5EI,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACJX,IACA,IAAMY,EAAcD,EAAKE,cACzBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZ,IAAMI,EAAYL,EAAKM,QACjBC,EAAqBF,EAAUG,MAAM,EAAGd,GAC9CS,QAAQC,IAAIC,EAAUG,MAAM,EAAGd,IAYrC,SAAoBM,GAClBT,EAAekB,UAAY,IAE3BT,EAAKU,SAAQ,SAAAC,GACX,IAgBcC,EAhBNC,EAAgDF,EAAhDE,MAAOC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,UAAWC,EAAiBL,EAAjBK,aACjCC,EAAYhC,SAASiC,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cACxBH,EAAUR,UAAY,cAA0Bb,OAAZN,GAAgCM,OAApBkB,EAAY,UAE1BlB,OAFkCiB,EAAM,wFAGpCjB,OADJiB,EAAM,mDAEAjB,QAS1BgB,EAViCG,EAW9BH,EAAWS,KAAI,SAAAxC,GAEhC,OADcD,EAAgB0C,MAAK,SAAAC,G,OAAKA,EAAE1C,KAAOA,C,IACpCC,I,IAGG0C,KAAK,MAhBqC,iDAGhD5B,OAkBM,IAAI6B,KAnBVT,GAoBKU,cAnBL,iDAGVnC,EAAeoC,YAAYV,E,IA3BzBW,CAAWrB,E,IAGZsB,OAAM,SAAAC,GACLzC,IACAc,QAAQ4B,MAAMD,E,IAIpBtC,EA1BkB,EACC,ICHnBA,EAHa,EACQ,IAIrBT,IAEAiD,YAAW,WACT3C,G,GACC,I","sources":["src/partials/genre.js","src/partials/t5-loader-functionality.js","src/partials/main-page.js","src/index.js"],"sourcesContent":["export const genresNamesById = [\n    {\n        id: 28,\n        name: \"Action\"\n    },\n    {\n        id: 12,\n        name: \"Adventure\"\n    },  \n    {\n        id: 16,\n        name: \"Animation\"\n    },  \n    {\n        id: 35,\n        name: \"Comedy\"\n    },  \n    {\n        id: 80,\n        name: \"Crime\"\n    },  \n    {\n        id: 99,\n        name: \"Documentary\"\n    },  \n    {\n        id: 18,\n        name: \"Drama\"\n    },  \n    {\n        id: 10751,\n        name: \"Family\"\n    },  \n    {\n        id: 14,\n        name: \"Fantasy\"\n    },  \n    {\n        id: 36,\n        name: \"History\"\n    },  \n    {\n        id: 27,\n        name: \"Horor\"\n    },  \n    {\n        id: 10402,\n        name: \"Music\"\n    },  \n    {\n        id: 9648,\n        name: \"Mystery\"\n    },  \n    {\n        id: 10749,\n        name: \"Romance\"\n    },  \n    {\n        id: 878,\n        name: \"Science Fiction\"\n    },\n    {\n        id: 10770,\n        name: \"TV Movie\"\n    },\n    {\n        id: 53,\n        name: \"Thriller\"\n    },\n    {\n        id: 10752,\n        name: \"War\"\n    },\n    {\n        id: 37,\n        name: \"War\"\n    },\n]\n","export function showLoader() {\n  const loaderElement = document.getElementById('loader');\n  if (loaderElement) {\n    loaderElement.style.display = 'inline-block';\n  }\n}\n\nexport function hideLoader() {\n  const loaderElement = document.getElementById('loader');\n  if (loaderElement) {\n    loaderElement.style.display = 'none';\n  }\n}\n","import { genresNamesById } from \"./genre\";\nimport { showLoader, hideLoader } from './t5-loader-functionality';\n\nconst api_key = '9ce408291b177c2a2e598968d33c0b4a';\nconst base_url = 'https://api.themoviedb.org/3/';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst movieContainer = document.getElementById('movie-container');\n\nlet currentPage = 1;\nlet itemsPerPage = 18;\n\nexport function fetchPopularMovies(page, itemsPerPage) {\n  showLoader();\n  return fetch(\n    `${base_url}discover/movie?sort_by=popularity.desc&api_key=${api_key}&page=${page}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      hideLoader();\n      const totalMovies = data.total_results;\n      console.log(data);\n      console.log(totalMovies);\n      const movieList = data.results;\n      const slicedMoviePerPage = movieList.slice(0, itemsPerPage);\n      console.log(movieList.slice(0, itemsPerPage));\n      showMovies(slicedMoviePerPage);\n    })\n\n    .catch(err => {\n      hideLoader();\n      console.error(err);\n    });\n}\n\nfetchPopularMovies(currentPage, itemsPerPage);\n\nfunction showMovies(data) {\n  movieContainer.innerHTML = ' ';\n\n  data.forEach(movie => {\n    const { title, poster_path, genre_ids, release_date } = movie;\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n    movieCard.innerHTML = `<img src =\"${IMAGE_URL}${poster_path} alt=\"${title}\"/>\n            <div class=\"movie-card-text\">\n            <h2 class=\"movie-title\">${title}</h2>\n            <p class=\"movie-card-genre\">${getGenre(genre_ids)} \n            <span class=\"movie-release\">| ${getMovieReleaseDate(\n              release_date\n            )}</span>\n            </p>\n            </div>`;\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nfunction getGenre(movieGenre) {\n  const genreNames = movieGenre.map(id => {\n    const genre = genresNamesById.find(g => g.id === id);\n    return genre.name;\n  });\n\n  return genreNames.join(',');\n}\n\nfunction getMovieReleaseDate(year) {\n  const dateString = year;\n  const movieDate = new Date(dateString);\n  return movieDate.getFullYear();\n}\n","import { fetchPopularMovies } from './partials/main-page';\nimport { showLoader, hideLoader } from './partials/t5-loader-functionality';\n\nconst page = 1;\nconst itemsPerPage = 18;\n\nfetchPopularMovies(page, itemsPerPage);\n\nshowLoader();\n\nsetTimeout(() => {\n  hideLoader();\n}, 2000);\n"],"names":["$dafa4900f3b6e4ee$export$8fb3d1a8ee781306","id","name","$5b368edb7e128eba$export$56525cbb1fcd885c","loaderElement","document","getElementById","style","display","$5b368edb7e128eba$export$5cee2c2772922923","$3862d110e4797799$var$IMAGE_URL","$3862d110e4797799$var$movieContainer","$3862d110e4797799$export$225b489b0d997c20","page","itemsPerPage1","fetch","concat","then","response","json","data","totalMovies","total_results","console","log","movieList","results","slicedMoviePerPage","slice","innerHTML","forEach","movie","movieGenre","title","poster_path","genre_ids","release_date","movieCard","createElement","classList","add","map","find","g","join","Date","getFullYear","appendChild","$3862d110e4797799$var$showMovies","catch","err","error","setTimeout"],"version":3,"file":"index.dabd115a.js.map"}